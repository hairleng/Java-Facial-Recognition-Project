/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Recognizer;

import javax.swing.SwingWorker;
import Capture.Capture;
import Capture.RegisterPerson;
import Principle.VisitReason;
import Util.ConnectDatabase;
import Util.ControlPerson;
import Util.ModelPerson;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FilenameFilter;
import java.io.IOException;
import java.nio.IntBuffer;
import java.sql.Array;
import java.util.Vector;
import javax.imageio.ImageIO;
import org.opencv.core.Core;
import static org.opencv.core.CvType.CV_32SC1;
import org.opencv.core.Mat;
import org.opencv.core.MatOfByte;
import org.opencv.core.MatOfRect;
import org.opencv.core.Rect;
import org.opencv.core.Scalar;
import org.opencv.core.Size;
import org.opencv.face.FaceRecognizer;
import org.opencv.face.LBPHFaceRecognizer;
import org.opencv.imgcodecs.Imgcodecs;
import org.opencv.imgproc.Imgproc;
import static org.opencv.imgproc.Imgproc.*;
import static org.opencv.imgproc.Imgproc.cvtColor;
import org.opencv.objdetect.CascadeClassifier;
import org.opencv.videoio.VideoCapture;
import Recognizer.FaceMatchUtils;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;

/**
 *
 * @author Ann
 */
public class Recognizer extends javax.swing.JFrame {

    private String id;
    private String fname;
    private String lname;
    private String program;
    private String gender;
    
    private Recognizer.DaemonThread myThread = null;
    int count = 0;
    VideoCapture webSource = null;
    Mat frame = new Mat();
    MatOfByte mem = new MatOfByte();
    CascadeClassifier cascade = new CascadeClassifier("photos/haarcascade_frontalface_alt.xml");
    MatOfRect faceDetections = new MatOfRect();
    FaceMatchUtils recognizer = new FaceMatchUtils();

    static int idPerson;
    ConnectDatabase connectdb = new ConnectDatabase();

    /**
     * Creates new form Recognizer
     */
    public Recognizer() {
        
        initComponents();
        jButton1.setVisible(false);//
        jButton1.setEnabled(false);
        jButton2.setVisible(false);//
        jButton2.setEnabled(false);
        jButton3.setVisible(false);//
        jButton3.setEnabled(false);
        jButton4.setVisible(false);
        jButton4.setEnabled(false);

        startCamera();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        label_photo = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        label_program = new javax.swing.JLabel();
        label_name = new javax.swing.JLabel();
        label_dob = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        label_gender = new javax.swing.JLabel();
        label_emotion = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        label_string = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Recognizer");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(250, 250, 250));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        label_photo.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPanel1.add(label_photo, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 36, 590, 330));

        jPanel2.setBackground(new java.awt.Color(250, 250, 250));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        label_program.setBackground(new java.awt.Color(153, 153, 255));
        label_program.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        label_program.setForeground(new java.awt.Color(255, 255, 255));
        label_program.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label_program.setText("Program");
        label_program.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        label_program.setOpaque(true);
        jPanel2.add(label_program, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 120, 40));

        label_name.setBackground(new java.awt.Color(153, 153, 255));
        label_name.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        label_name.setForeground(new java.awt.Color(255, 255, 255));
        label_name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label_name.setText("Name");
        label_name.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        label_name.setOpaque(true);
        jPanel2.add(label_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 40, 160, 40));

        label_dob.setBackground(new java.awt.Color(153, 153, 255));
        label_dob.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        label_dob.setForeground(new java.awt.Color(255, 255, 255));
        label_dob.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label_dob.setText("Date of birth");
        label_dob.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        label_dob.setOpaque(true);
        jPanel2.add(label_dob, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 40, 170, 40));

        jButton1.setText("Confirm");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 100, -1, -1));

        jButton2.setText("Manually Verification");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 100, -1, -1));

        jButton3.setText("First-time Visit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 100, -1, -1));

        label_gender.setBackground(new java.awt.Color(153, 153, 255));
        label_gender.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        label_gender.setForeground(new java.awt.Color(255, 255, 255));
        label_gender.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label_gender.setText("Gender");
        label_gender.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        label_gender.setOpaque(true);
        jPanel2.add(label_gender, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 40, 90, 40));

        label_emotion.setText("  ");
        jPanel2.add(label_emotion, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 0, -1, -1));

        jButton4.setText("Recheck");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 100, -1, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 380, 590, 150));

        label_string.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label_string.setText("Recognizing...");
        jPanel1.add(label_string, new org.netbeans.lib.awtextra.AbsoluteConstraints(-1, 10, 620, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 620, 540));

        setSize(new java.awt.Dimension(622, 565));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int idP = Integer.parseInt(id);
        stopCamera();
        new VisitReason(idP, fname, lname, program, gender).setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        stopCamera();
        new ManualSearch().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        stopCamera();
        new RegisterPerson().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        stopCamera();
        new Recognizer().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton4ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel label_dob;
    private javax.swing.JLabel label_emotion;
    private javax.swing.JLabel label_gender;
    private javax.swing.JLabel label_name;
    private javax.swing.JLabel label_photo;
    private javax.swing.JLabel label_program;
    private javax.swing.JLabel label_string;
    // End of variables declaration//GEN-END:variables

    class DaemonThread implements Runnable {
        
        protected volatile boolean runnable = false;
        
        @Override
        public void run() {
            synchronized (this) {
                int flag = 0; //flag =1 if the face is recognized, loop ends.
                while (runnable) {
                    
                    if (webSource.grab()) {
                        
                        webSource.retrieve(frame);//frame is the picture camera captured
                        Graphics g = label_photo.getGraphics();
                        
                        Mat imageGray = new Mat();//gray picture used to compare
                        Mat imageColor = new Mat();//colored picture used to detect emotions
                        cvtColor(frame, imageGray, COLOR_BGRA2GRAY);
                        cascade.load("haarcascade_frontalface_alt.xml");//load face detection xml file
                        cascade.detectMultiScale(imageGray, faceDetections, 1.1, 2, 0,
                                new Size(150, 150), new Size(500, 500));
                     
                       
                        //detect faces and mark them with rectangle
                        for (Rect rect : faceDetections.toArray()) {
                            Imgproc.rectangle(frame, rect, new Scalar(0, 255, 0, 0));//add rectangle to the face in the camera panel
                            if (flag == 1) {//flag =1 if the face is recognized, loop ends.
                                break;
                            }
                            
                            Mat face = new Mat(imageGray, rect);
                            Mat faceColor = new Mat(frame, rect);
                            Imgproc.resize(face, face, new Size(160, 160));
                            
                            connectdb.connect();
                            connectdb.executeSQL("select * from info order by id desc limit 1");
                            int pnum = 0;
                            try {
                                connectdb.rs.first();
                                pnum = connectdb.rs.getInt("id");//find out how many people in the database
                            } catch (SQLException ex) {
                                
                            }
                            if (pnum==0) {// no record in the database, loop break
                            	label_string.setText("No Record in Database! Please Add Users First!");
                                 jButton3.setVisible(true);//
                                 jButton3.setEnabled(true);
                            	break;
                            }
                            for (int a = 1; a <= pnum; a++) { //a is id
                                if (flag == 1) {//if a face has been recognized, break
                                    break;
                                }
                                for (int b = 1; b <= 5; b++) { //b is the number of photos
                                    String testFace = "photos/person." + a + "." + b + ".jpg";
                                    System.out.println("testFace: " + testFace);
                                    double possibility = recognizer.histogramMatch(face, testFace); //possibility of the match result
                                    System.out.println("possibility like testFace: " + possibility); //print out the possibility
                                    
                                    if (possibility > 0.7) {//threshold value of recognizing the face
                                        idPerson = Integer.parseInt(testFace.split("\\.")[1]);//the ID of the people recognized
                                        label_string.setText ("recoginzed as " + idPerson);
                                        
                                        rec();//store the data into database and show data
                                        flag = 1;
                                        jButton1.setVisible(true);//
                                        jButton1.setEnabled(true);
                                        jButton4.setVisible(true);
                                        jButton4.setEnabled(true);
                                        jButton2.setVisible(false);//
                                        jButton2.setEnabled(false);
                                        jButton3.setVisible(false);//
                                        jButton3.setEnabled(false);
                                        
                                        
                                        BufferedImage jpgfile = test.mat2BufImg(faceColor, ".jpg");//store the picture captured
                                        try {
                                            ImageIO.write(jpgfile, "jpg", new File("./1.jpg"));
                                            String emotions = test.detectFaces("1.jpg", System.out);//use Google api to detect the emotions in the picture
                                            label_emotion.setText(emotions);//return the emotions and confidence
                                            
                                        } catch (Exception e) {
                                            System.out.print(e);
                                        }            
                                        break;
                                    } else {
                                        label_string.setText("No matched person found!");                                        
                                        jButton2.setVisible(true);//
                                        jButton2.setEnabled(true);
                                        jButton3.setVisible(true);//
                                        jButton3.setEnabled(true);
                                    }
                                }
                            }
                        }
                        
                        try {
                            
                            Imgcodecs.imencode(".bmp", frame, mem);
                            Image im = ImageIO.read(new ByteArrayInputStream(mem.toArray()));
                            BufferedImage buff = (BufferedImage) im;
                            
                            if (g.drawImage(buff, 0, 0, getWidth(), getHeight() - 100, 0, 0, buff.getWidth(), buff.getHeight(), null)) {
                                if (runnable == false) {
                                    stopCamera();
                                    this.wait();
                                }
                            }
                        } catch (Exception e) {
                        }
                        
                    }
                }
            }
        }
    }
 // select student's information from the database, and show them on the panel
    private void rec() {
        try {
            String SQL = "SELECT * FROM info WHERE id = " + idPerson;
            connectdb.connect();
            connectdb.executeSQL(SQL);
            //System.out.println(connectdb.rs.last());

            connectdb.rs.next();
            fname = connectdb.rs.getString("first_name");
            lname = connectdb.rs.getString("last_name");
            id = connectdb.rs.getString("id");
            program = connectdb.rs.getString("program");
            gender = connectdb.rs.getString("gender");
            label_name.setText(connectdb.rs.getString("first_name") + " "
                    + connectdb.rs.getString("last_name"));

            label_dob.setText(connectdb.rs.getString("dob"));
            label_program.setText(connectdb.rs.getString("program"));
            label_gender.setText(connectdb.rs.getString("gender"));
            label_string.setText("Welcome " + connectdb.rs.getString("first_name") + " "
                    + connectdb.rs.getString("last_name"));
            jButton1.setOpaque(true);
            jButton1.setContentAreaFilled(true);            

            
        } catch (Exception e) {
            System.out.println("rec Error: " + e);
        }
        connectdb.disconnect();
    }

 
    public void stopCamera() {
        myThread.runnable = false;//stop thread
        webSource.release();//stop capturing from cam
        dispose();
    }
    
    public void startCamera() {
        webSource = new VideoCapture(0);
        myThread = new Recognizer.DaemonThread();
        Thread t = new Thread(myThread);
        t.setDaemon(true);
        myThread.runnable = true;//start thread
        t.start();
    }
}
